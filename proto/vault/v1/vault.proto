syntax = "proto3";
package vault.v1;

import "cosmos/auth/v1beta1/auth.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/provlabs/vault/types";

// VaultAccount represents a central holding place for assets, governed by a set of rules.
// It is based on the ERC-4626 standard and builds upon the Provenance Marker module.
message VaultAccount {
  // base_account cosmos account information including address and coin holdings.
  cosmos.auth.v1beta1.BaseAccount base_account = 1 [(gogoproto.embed) = true];
  // share_denom is the denomination used to represent shares in the vault (e.g., vault tokens).
  string share_denom = 2;
  // underlying_assets specifies the denomination(s) of the asset(s) managed by the vault.
  repeated string underlying_assets = 3;
  // admin is the address that has administrative privileges over the vault.
  string admin = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // current_interest_rate is the actual interest rate currently being applied.
  // This may be adjusted programmatically (e.g., due to lack of funds).
  string current_interest_rate = 5 [(cosmos_proto.scalar) = "cosmos.DecString"];
  // desired_interest_rate is the target interest rate that the vault intends to apply.
  string desired_interest_rate = 6 [(cosmos_proto.scalar) = "cosmos.DecString"];
}

// VaultInterestDetails stores metadata related to interest accrual and payment for a vault.
//
// period_start represents the Unix timestamp (in seconds) when the current interest
// accrual period began. This value is updated when interest is successfully paid out.
// If multiple transactions occur in the same block, only the first will trigger interest reconciliation.
message VaultInterestDetails {
  // The start time (in Unix seconds) of the current interest accrual period.
  int64 period_start = 1;
  // The expire time (in Unix seconds) of the current interest accrual period.
  int64 expire_time = 2;
}
