syntax = "proto3";
package vault.v1;

import "cosmos_proto/cosmos.proto";

option go_package = "github.com/provlabs/vault/types";

// EventDeposit is an event emitted when assets are deposited into a vault.
message EventDeposit {
  // caller is the address of the account that initiated the deposit.
  string caller = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // owner is the address of the account that will receive the minted shares.
  string owner = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // assets is the coins amount string of the underlying assets that were deposited.
  string assets = 3;
  // shares is the coins amount string of the vault shares that were minted.
  string shares = 4;
  // vault_id is the numerical identifier of the vault.
  uint32 vault_id = 5;
}

// EventWithdraw is an event emitted when assets are withdrawn from a vault.
message EventWithdraw {
  // caller is the address of the account that initiated the withdrawal.
  string caller = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // receiver is the address of the account that will receive the underlying assets.
  string receiver = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // owner is the address of the account from which the shares were burned.
  string owner = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // assets is the coins amount string of the underlying assets that were withdrawn.
  string assets = 4;
  // shares is the coins amount string of the vault shares that were burned.
  string shares = 5;
  // vault_id is the numerical identifier of the vault.
  uint32 vault_id = 6;
}

// EventVaultCreated is an event emitted when a vault is created.
message EventVaultCreated {
  // vault_address is the bech32 address of the vault.
  string vault_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // admin is the address of the account that manages the vault.
  string admin = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // share_denom is the name of the assets created by the vault used for distribution.
  string share_denom = 3;
  // underlying_assets is the denomination of the asset supported by the vault.
  repeated string underlying_assets = 4;
}
